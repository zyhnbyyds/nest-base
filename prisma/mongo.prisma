generator client {
  provider = "prisma-client-js"
  output   = "../packages/mongo"
}

datasource mongodb {
  provider = "mongodb"
  url      = env("DATABASE_MONGO_URL")
}

model ImUser {
  userId       String    @id @map("_id")
  status       Int?      @default(0)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  isDelete     Boolean?  @default(false)
  ImGroupIds   String[]  @map("group_ids")
  ImGroups     ImGroup[] @relation(fields: [ImGroupIds], references: [groupId])
  lastActiveAt DateTime  @default(now())

  @@map("im_user")
}

model ImGroup {
  groupId     String   @id @map("_id")
  status      Int?     @default(0)
  groupName   String   @map("group_name")
  description String?  @map("description")
  createdBy   String   @map("created_by")
  masterId    String   @map("master_id")
  slaveIds    String[] @map("slave_ids")
  slaves      ImUser[] @relation(fields: [slaveIds], references: [userId])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isDelete    Boolean? @default(false)

  @@map("im_group")
}

model ImMessage {
  id         String   @id @default(auto()) @map("_id") @mongodb.ObjectId
  messageId  String   @unique @map("message_id")
  fromUserId String   @map("from_user_id")
  toUserId   String?  @map("to_user_id")
  toGroupId  String?  @map("to_group_id")
  content    String   @map("content") @mongodb.String
  type       Int?     @default(0)
  status     Int?     @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isDelete   Boolean? @default(false)

  @@map("im_message")
}
