version: '3.9'

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: yujiezhang187332
      MYSQL_USER: nest-timer
      MYSQL_PASSWORD: yujiezhang187332
      MYSQL_DATABASE: nestjs_db
    ports:
      - '3309:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-mysql.sql:/docker-entrypoint-initdb.d/init-mysql.sql:ro # 挂载初始化脚本
    networks:
      - net-backend
    healthcheck: # 添加健康检查
      test: [CMD, mysqladmin, ping, -uroot, -p$$MYSQL_ROOT_PASSWORD]
      interval: 5s
      timeout: 10s
      retries: 10

  nats:
    image: nats:latest
    container_name: nats
    volumes:
      - ./nats.conf:/etc/nats/nats.conf
    command: [-c, /etc/nats/nats.conf]
    ports:
      - '4222:4222'
      - '8222:8222' # 仅暴露监控端口（集群端口无需暴露）
    networks:
      - net-backend

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass yujiezhang187332
    ports:
      - '6389:6379'
    networks:
      - net-backend

  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: nest-timer
      MONGO_INITDB_ROOT_PASSWORD: yujiezhang187332
    ports:
      - '27019:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - net-backend
    healthcheck: # 添加健康检查
      test: [CMD, mongosh, --eval, "db.adminCommand('ping')"]
      interval: 5s
      timeout: 10s
      retries: 10

  nestjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs
    environment:
      REDIS_HOST: redis # 使用服务名
      REDIS_PORT: 6379 # 容器内部端口（非宿主机端口 6389）
      REDIS_PASSWORD: yujiezhang187332
      REDIS_DB: 0
      DB_PORT: 3306 # 容器内部端口（非宿主机端口 3309）
      DB_HOST: mysql # 关键修复：使用服务名
      DB_USERNAME: nest-timer
      DB_PASSWORD: yujiezhang187332
      DB_DATABASE: nestjs_db
      DATABASE_MONGO_URL: mongodb://nest-timer:yujiezhang187332@mongo:27017/nestjs_db?authSource=admin # 添加认证库
      DATABASE_URL: mysql://nest-timer:yujiezhang187332@mysql:3306/nestjs_db # 使用服务名和内部端口
      NATS_SERVER_URL: nats://nats:4222 # 使用服务名
      # 其他环境变量保持不变...
    ports:
      - '3000:3000'
      - '3001:3001'
      - '3004:3004'
      - '3005:3005'
      - '3006:3006'
      - '3100:3100'
    depends_on:
      mysql:
        condition: service_healthy # 依赖健康状态
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
      nats:
        condition: service_started
    networks:
      - net-backend

volumes:
  mysql_data:
  mongodb_data:

networks:
  net-backend:
    driver: bridge
